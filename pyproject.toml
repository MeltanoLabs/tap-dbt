[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [
  "poetry-core==1.6",
  "poetry-dynamic-versioning",
]

[tool.poetry]
name = "tap-dbt"
version = "0.0.0"
description = "Singer tap for dbt, built with the Singer SDK."
license = "Apache-2.0"
authors = ["Edgar Ramírez Mondragón <edgarrm358@sample.com>"]
maintainers = ["Edgar Ramírez Mondragón <edgarrm358@sample.com>"]
readme = "README.md"
repository = "https://github.com/edgarrmondragon/tap-dbt"
keywords = ["singer.io", "elt", "dbt", "singer-sdk"]

[tool.poetry.dependencies]
python = ">=3.7.1,<4"
pendulum = "~=2.1.2"
pyyaml = "~=6.0"
requests = "~=2.31.0"
singer-sdk = "~=0.34.0"

[tool.poetry.group.dev.dependencies]
deptry = { version = ">=0.8.0", python = ">=3.8" }
faker = ">=17.6"
pytest = "~=7.4"
responses = "~=0.23.1"

[tool.poetry.scripts]
tap-dbt = 'tap_dbt.tap:cli'

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
line-length = 88
src = ["tap_dbt", "tests"]
target-version = "py37"

[tool.ruff.lint]
ignore = [
  "ANN101",  # missing-type-self
  "FIX002",  # line-contains-todo
  "COM812",  # missing-trailing-comma
  "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]
unfixable = [
  "ERA001",  # commented-out-code
]

[tool.ruff.lint.isort]
known-first-party = ["tap_dbt"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN201", "S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.deptry]
known_first_party = ["tap_dbt"]

[tool.deptry.package_module_name_map]
faker = "faker"
pytest = "pytest"
responses = "responses"
