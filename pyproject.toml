[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [
  "poetry-core==1.9",
  "poetry-dynamic-versioning==1.3",
]

[tool.poetry]
name = "tap-dbt"
version = "0.0.0"
description = "Singer tap for dbt, built with the Singer SDK."
license = "Apache-2.0"
authors = [
  "Edgar Ramírez Mondragón <edgarrm358@sample.com>",
]
maintainers = [
  "Edgar Ramírez Mondragón <edgarrm358@sample.com>",
]
readme = "README.md"
repository = "https://github.com/edgarrmondragon/tap-dbt"
keywords = [
  "singer.io",
  "elt",
  "dbt",
  "singer-sdk",
]

[tool.poetry.dependencies]
python = ">=3.8"
pendulum = ">=2.1.2,<4"
pyyaml = "~=6.0"
requests = "~=2.32.0"
singer-sdk = "~=0.37.0"

[tool.poetry.group.dev.dependencies]
deptry = ">=0.14.2"
faker = ">=17.6"
pytest = "~=8.0"
responses = "~=0.25.0"

[tool.poetry.scripts]
tap-dbt = 'tap_dbt.tap:cli'

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
target-version = "py38"

line-length = 88
src = [
  "tap_dbt",
  "tests",
]
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # missing-type-self
  "COM812", # missing-trailing-comma
  "FIX002", # line-contains-todo
  "ISC001", # single-line-implicit-string-concatenation
]

lint.per-file-ignores."tests/*" = [
  "ANN201",
  "S101",
]
lint.unfixable = [
  "ERA001", # commented-out-code
]
lint.isort.known-first-party = [
  "tap_dbt",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"

[tool.deptry]
known_first_party = [
  "tap_dbt",
]

[tool.deptry.package_module_name_map]
faker = "faker"
pytest = "pytest"
responses = "responses"
